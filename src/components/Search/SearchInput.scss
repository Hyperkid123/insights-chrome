@import "~@redhat-cloud-services/frontend-components-utilities/styles/_all";
@import '~@patternfly/patternfly/patternfly-addons.scss';

// Traveling wave loading animation keyframes - seamless loop
@keyframes chr-c-search-wave {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

// Simple pulse animation for loading state
@keyframes chr-c-search-pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(0, 123, 186, 0.4);
  }
  100% {
    box-shadow: 0 0 0 4px rgba(0, 123, 186, 0.1);
  }
}

// Right-to-left traveling wave animation
@keyframes chr-c-search-wave-rtl {
  0% {
    background-position: 100% 0;
  }
  100% {
    background-position: -100% 0;
  }
}

// Traveling light effect animation
@keyframes chr-c-search-wave-travel {
  0% {
    background-position: 100% 0;
  }
  100% {
    background-position: -100% 0;
  }
}

// Shimmer effect that travels from right to left
@keyframes chr-c-search-shimmer {
  0% {
    left: 100%;
  }
  100% {
    left: -100%;
  }
}

// Rotate the conic gradient around the border
@keyframes chr-c-search-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.chr-c-search-title {
  mark {
    font-weight: var(--pf-t--global--font--weight--body--bold);
    background-color: transparent;
  }
}

.chr-c-search {
  &__collapsed {
    justify-content: flex-end;
  }
  
  &__loading {
    // Target the actual input group that contains the input field
    .pf-v6-c-text-input-group {
      position: relative;
      overflow: hidden;
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 2px;
        background: linear-gradient(
          90deg,
          transparent 0%,
          transparent 30%,
          rgba(0, 123, 186, 0.15) 40%,
          rgba(0, 123, 186, 0.25) 50%,
          rgba(0, 123, 186, 0.15) 60%,
          transparent 70%,
          transparent 100%
        );
        animation: chr-c-search-shimmer 2s linear infinite;
        pointer-events: none;
        z-index: 1;
        border-radius: var(--pf-t--global--border-radius--medium);
      }
      
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: -100%;
        width: 100%;
        height: 2px;
        background: linear-gradient(
          90deg,
          transparent 0%,
          transparent 30%,
          rgba(0, 123, 186, 0.15) 40%,
          rgba(0, 123, 186, 0.25) 50%,
          rgba(0, 123, 186, 0.15) 60%,
          transparent 70%,
          transparent 100%
        );
        animation: chr-c-search-shimmer 2s linear infinite;
        pointer-events: none;
        z-index: 1;
        border-radius: var(--pf-t--global--border-radius--medium);
      }
    }
    
    input:focus-visible {
      outline: none !important;
    }
  }

  &__input {
    .pf-v6-c-input-group {
      background-color: transparent !important;
    }
    .pf-v6-c-text-input-group {
      position: relative;
      
      // Create a stable pseudo-element that's always present
      &::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        border-radius: var(--pf-t--global--border--radius--medium);
        pointer-events: none;
        border: 2px solid transparent;
        background: 
          linear-gradient(var(--pf-t--global--background--color--primary--default), var(--pf-t--global--background--color--primary--default)) padding-box,
          linear-gradient(
            90deg,
            transparent 0%,
            transparent 10%,
            rgba(0, 123, 186, 0.4) 20%,
            rgba(0, 123, 186, 0.4) 30%,
            transparent 40%,
            transparent 60%,
            rgba(0, 123, 186, 0.4) 70%,
            rgba(0, 123, 186, 0.4) 80%,
            transparent 90%,
            transparent 100%
          ) border-box;
        background-size: auto, 200% 100%;
        animation: chr-c-search-wave 2000ms linear infinite;
        z-index: 0;
        
        // Hidden by default
        opacity: 0;
        
        // Ensure smooth animation
        will-change: background-position, opacity;
        transform: translateZ(0);
        
        // Smooth transition for opacity changes
        transition: opacity 200ms ease-in-out;
      }
      
      // Ensure input content is above the animation
      input {
        position: relative;
        z-index: 2;
        background-color: transparent;
      }
    }
    



    --pf-v6-c-text-input-group--BackgroundColor: var(--pf-t--global--background--color--inverse--default);
    --pf-v6-c-text-input-group__icon--Color: var(--pf-t--global--icon--color--brand--default);
    --pf-v6-c-text-input-group__text--after--BorderBottomColor: var(--pf-t--global--border--color--default);
    --pf-v6-c-text-input-group__text--before--BorderColor: var(--pf-t--global--border--color--on-secondary);
    --pf-v6-c-text-input-group__text--hover__icon--Color: var(--pf-t--global--icon--color--brand--default);
    input::placeholder {
      color: var(--pf-t--global--text--color--placeholder);
    }
    input, input:hover::placeholder {
      color: var(--pf-t--global--text--color--subtle) !important;
    }
    &:hover {
      --pf-v6-c-text-input-group__text--after--BorderBottomColor: var(--pf-t--global--border--color--hover);
    }
    input:focus-visible {
      outline: var(--pf-t--global--border--width--regular) solid var(--pf-t--global--border--color--clicked);
    }
  }

  &__menu {
    overflow-y: auto;
    .pf-v6-c-menu__group-title {
      padding-bottom: var(--pf-t--global--spacer--md);
      &:empty {
        display: none;
      }
    }
    small {
      display: inline-block;
    }
  }
  &__empty-state {
    .pf-v6-c-empty-state__icon {
      font-size: 2rem;
    }
  }

  // Custom gutter for label Split components - use small spacer
  &-labels.pf-v6-l-split.pf-m-gutter {
    gap: var(--pf-t--global--spacer--sm);
  }
}
